// Generated from ./src/antlr/BaneQL.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class BaneQLLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly PROPERTY = 18;
	public static readonly LITERAL_VALUE = 19;
	public static readonly EMAIL = 20;
	public static readonly DOMAINNAME_OR_IP = 21;
	public static readonly STRING = 22;
	public static readonly NUMBER = 23;
	public static readonly WS = 24;
	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"PROPERTY", "LITERAL_VALUE", "EMAIL", "DOMAINNAME_OR_IP", "USERNAME", 
		"DOMAIN", "STRING", "NUMBER", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'>'", "'<'", "'fromasp'", "'('", "')'", "'toasp'", "'pivot'", 
		"'zonefam'", "'zone'", "'subs'", "'cols'", "'+'", "'-'", "','", "'='", 
		"'>='", "'<='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "PROPERTY", "LITERAL_VALUE", 
		"EMAIL", "DOMAINNAME_OR_IP", "STRING", "NUMBER", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(BaneQLLexer._LITERAL_NAMES, BaneQLLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return BaneQLLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(BaneQLLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "BaneQL.g4"; }

	// @Override
	public get ruleNames(): string[] { return BaneQLLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return BaneQLLexer._serializedATN; }

	// @Override
	public get modeNames(): string[] { return BaneQLLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1A\xCE\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12" +
		"\x03\x12\x03\x12\x03\x13\x03\x13\x07\x13{\n\x13\f\x13\x0E\x13~\v\x13\x03" +
		"\x14\x06\x14\x81\n\x14\r\x14\x0E\x14\x82\x03\x14\x06\x14\x86\n\x14\r\x14" +
		"\x0E\x14\x87\x03\x14\x07\x14\x8B\n\x14\f\x14\x0E\x14\x8E\v\x14\x03\x15" +
		"\x06\x15\x91\n\x15\r\x15\x0E\x15\x92\x03\x15\x03\x15\x06\x15\x97\n\x15" +
		"\r\x15\x0E\x15\x98\x03\x15\x03\x15\x06\x15\x9D\n\x15\r\x15\x0E\x15\x9E" +
		"\x06\x15\xA1\n\x15\r\x15\x0E\x15\xA2\x03\x16\x06\x16\xA6\n\x16\r\x16\x0E" +
		"\x16\xA7\x03\x16\x03\x16\x06\x16\xAC\n\x16\r\x16\x0E\x16\xAD\x06\x16\xB0" +
		"\n\x16\r\x16\x0E\x16\xB1\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19" +
		"\x03\x19\x03\x19\x07\x19\xBC\n\x19\f\x19\x0E\x19\xBF\v\x19\x03\x19\x03" +
		"\x19\x03\x1A\x06\x1A\xC4\n\x1A\r\x1A\x0E\x1A\xC5\x03\x1B\x06\x1B\xC9\n" +
		"\x1B\r\x1B\x0E\x1B\xCA\x03\x1B\x03\x1B\x03\xBD\x02\x02\x1C\x03\x02\x03" +
		"\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02" +
		"\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F" +
		"\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x02" +
		"/\x02\x021\x02\x183\x02\x195\x02\x1A\x03\x02\n\x07\x02,,01C\\aac|\b\x02" +
		"&&,,0<C\\aac|\x03\x022;\x07\x02,,01<<C\\c|\x07\x02&&,,0<C\\c|\b\x02--" +
		"/02;C\\aac|\x07\x02//2;C\\aac|\x05\x02\v\f\x0E\x0F\"\"\xDA\x02\x03\x03" +
		"\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03" +
		"\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02" +
		"\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02" +
		"\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02" +
		"\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02" +
		"\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02" +
		"\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03" +
		"\x02\x02\x02\x025\x03\x02\x02\x02\x037\x03\x02\x02\x02\x059\x03\x02\x02" +
		"\x02\x07;\x03\x02\x02\x02\tC\x03\x02\x02\x02\vE\x03\x02\x02\x02\rG\x03" +
		"\x02\x02\x02\x0FM\x03\x02\x02\x02\x11S\x03\x02\x02\x02\x13[\x03\x02\x02" +
		"\x02\x15`\x03\x02\x02\x02\x17e\x03\x02\x02\x02\x19j\x03\x02\x02\x02\x1B" +
		"l\x03\x02\x02\x02\x1Dn\x03\x02\x02\x02\x1Fp\x03\x02\x02\x02!r\x03\x02" +
		"\x02\x02#u\x03\x02\x02\x02%x\x03\x02\x02\x02\'\x80\x03\x02\x02\x02)\x90" +
		"\x03\x02\x02\x02+\xA5\x03\x02\x02\x02-\xB3\x03\x02\x02\x02/\xB5\x03\x02" +
		"\x02\x021\xB7\x03\x02\x02\x023\xC3\x03\x02\x02\x025\xC8\x03\x02\x02\x02" +
		"78\x07@\x02\x028\x04\x03\x02\x02\x029:\x07>\x02\x02:\x06\x03\x02\x02\x02" +
		";<\x07h\x02\x02<=\x07t\x02\x02=>\x07q\x02\x02>?\x07o\x02\x02?@\x07c\x02" +
		"\x02@A\x07u\x02\x02AB\x07r\x02\x02B\b\x03\x02\x02\x02CD\x07*\x02\x02D" +
		"\n\x03\x02\x02\x02EF\x07+\x02\x02F\f\x03\x02\x02\x02GH\x07v\x02\x02HI" +
		"\x07q\x02\x02IJ\x07c\x02\x02JK\x07u\x02\x02KL\x07r\x02\x02L\x0E\x03\x02" +
		"\x02\x02MN\x07r\x02\x02NO\x07k\x02\x02OP\x07x\x02\x02PQ\x07q\x02\x02Q" +
		"R\x07v\x02\x02R\x10\x03\x02\x02\x02ST\x07|\x02\x02TU\x07q\x02\x02UV\x07" +
		"p\x02\x02VW\x07g\x02\x02WX\x07h\x02\x02XY\x07c\x02\x02YZ\x07o\x02\x02" +
		"Z\x12\x03\x02\x02\x02[\\\x07|\x02\x02\\]\x07q\x02\x02]^\x07p\x02\x02^" +
		"_\x07g\x02\x02_\x14\x03\x02\x02\x02`a\x07u\x02\x02ab\x07w\x02\x02bc\x07" +
		"d\x02\x02cd\x07u\x02\x02d\x16\x03\x02\x02\x02ef\x07e\x02\x02fg\x07q\x02" +
		"\x02gh\x07n\x02\x02hi\x07u\x02\x02i\x18\x03\x02\x02\x02jk\x07-\x02\x02" +
		"k\x1A\x03\x02\x02\x02lm\x07/\x02\x02m\x1C\x03\x02\x02\x02no\x07.\x02\x02" +
		"o\x1E\x03\x02\x02\x02pq\x07?\x02\x02q \x03\x02\x02\x02rs\x07@\x02\x02" +
		"st\x07?\x02\x02t\"\x03\x02\x02\x02uv\x07>\x02\x02vw\x07?\x02\x02w$\x03" +
		"\x02\x02\x02x|\t\x02\x02\x02y{\t\x03\x02\x02zy\x03\x02\x02\x02{~\x03\x02" +
		"\x02\x02|z\x03\x02\x02\x02|}\x03\x02\x02\x02}&\x03\x02\x02\x02~|\x03\x02" +
		"\x02\x02\x7F\x81\t\x04\x02\x02\x80\x7F\x03\x02\x02\x02\x81\x82\x03\x02" +
		"\x02\x02\x82\x80\x03\x02\x02\x02\x82\x83\x03\x02\x02\x02\x83\x85\x03\x02" +
		"\x02\x02\x84\x86\t\x05\x02\x02\x85\x84\x03\x02\x02\x02\x86\x87\x03\x02" +
		"\x02\x02\x87\x85\x03\x02\x02\x02\x87\x88\x03\x02\x02\x02\x88\x8C\x03\x02" +
		"\x02\x02\x89\x8B\t\x06\x02\x02\x8A\x89\x03\x02\x02\x02\x8B\x8E\x03\x02" +
		"\x02\x02\x8C\x8A\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D(\x03\x02" +
		"\x02\x02\x8E\x8C\x03\x02\x02\x02\x8F\x91\x05-\x17\x02\x90\x8F\x03\x02" +
		"\x02\x02\x91\x92\x03\x02\x02\x02\x92\x90\x03\x02\x02\x02\x92\x93\x03\x02" +
		"\x02\x02\x93\x94\x03\x02\x02\x02\x94\x96\x07B\x02\x02\x95\x97\x05/\x18" +
		"\x02\x96\x95\x03\x02\x02\x02\x97\x98\x03\x02\x02\x02\x98\x96\x03\x02\x02" +
		"\x02\x98\x99\x03\x02\x02\x02\x99\xA0\x03\x02\x02\x02\x9A\x9C\x070\x02" +
		"\x02\x9B\x9D\x05/\x18\x02\x9C\x9B\x03\x02\x02\x02\x9D\x9E\x03\x02\x02" +
		"\x02\x9E\x9C\x03\x02\x02\x02\x9E\x9F\x03\x02\x02\x02\x9F\xA1\x03\x02\x02" +
		"\x02\xA0\x9A\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02\xA2\xA0\x03\x02\x02" +
		"\x02\xA2\xA3\x03\x02\x02\x02\xA3*\x03\x02\x02\x02\xA4\xA6\x05/\x18\x02" +
		"\xA5\xA4\x03\x02\x02\x02\xA6\xA7\x03\x02\x02\x02\xA7\xA5\x03\x02\x02\x02" +
		"\xA7\xA8\x03\x02\x02\x02\xA8\xAF\x03\x02\x02\x02\xA9\xAB\x070\x02\x02" +
		"\xAA\xAC\x05/\x18\x02\xAB\xAA\x03\x02\x02\x02\xAC\xAD\x03\x02\x02\x02" +
		"\xAD\xAB\x03\x02\x02\x02\xAD\xAE\x03\x02\x02\x02\xAE\xB0\x03\x02\x02\x02" +
		"\xAF\xA9\x03\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1\xAF\x03\x02\x02\x02" +
		"\xB1\xB2\x03\x02\x02\x02\xB2,\x03\x02\x02\x02\xB3\xB4\t\x07\x02\x02\xB4" +
		".\x03\x02\x02\x02\xB5\xB6\t\b\x02\x02\xB60\x03\x02\x02\x02\xB7\xBD\x07" +
		"$\x02\x02\xB8\xB9\x07^\x02\x02\xB9\xBC\x07$\x02\x02\xBA\xBC\v\x02\x02" +
		"\x02\xBB\xB8\x03\x02\x02\x02\xBB\xBA\x03\x02\x02\x02\xBC\xBF\x03\x02\x02" +
		"\x02\xBD\xBE\x03\x02\x02\x02\xBD\xBB\x03\x02\x02\x02\xBE\xC0\x03\x02\x02" +
		"\x02\xBF\xBD\x03\x02\x02\x02\xC0\xC1\x07$\x02\x02\xC12\x03\x02\x02\x02" +
		"\xC2\xC4\t\x04\x02\x02\xC3\xC2\x03\x02\x02\x02\xC4\xC5\x03\x02\x02\x02" +
		"\xC5\xC3\x03\x02\x02\x02\xC5\xC6\x03\x02\x02\x02\xC64\x03\x02\x02\x02" +
		"\xC7\xC9\t\t\x02\x02\xC8\xC7\x03\x02\x02\x02\xC9\xCA\x03\x02\x02\x02\xCA" +
		"\xC8\x03\x02\x02\x02\xCA\xCB\x03\x02\x02\x02\xCB\xCC\x03\x02\x02\x02\xCC" +
		"\xCD\b\x1B\x02\x02\xCD6\x03\x02\x02\x02\x12\x02|\x82\x87\x8C\x92\x98\x9E" +
		"\xA2\xA7\xAD\xB1\xBB\xBD\xC5\xCA\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!BaneQLLexer.__ATN) {
			BaneQLLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(BaneQLLexer._serializedATN));
		}

		return BaneQLLexer.__ATN;
	}

}

